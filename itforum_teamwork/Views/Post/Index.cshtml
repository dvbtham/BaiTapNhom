@model PagedList.IPagedList<Model.EF.Post>
@using PagedList.Mvc
@using Model.DAO

@{
    ViewBag.Title = "Danh sách bài viết";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userDao = new UserDAO();
    var catDao = new CategoryDAO();
}

<h2 class="title text-center">Danh sách bài viết của tôi</h2>
@using (Html.BeginForm("Index", "Post", FormMethod.Get))
{
    <div class="container">
        <div class="row">
            <div id="custom-search-input">
                <div class="input-group col-md-4">
                    <input type="text" value="@ViewBag.SearchString" name="searchString" class="search-query form-control" placeholder="Search" />
                    <span class="input-group-btn">
                        <button class="btn btn-danger" type="button">
                            <span class=" glyphicon glyphicon-search"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </div>
}
<p>
    @Html.ActionLink("Thêm mới", "Create")
</p>
<div class="table-responsive table-bordered">
    <table class="table" cellpadding="10">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Title)
            <th>
                @Html.DisplayNameFor(model => model.First().UserID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CategoryID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PostedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Views)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            var user = userDao.GetUserByID(item.UserID);
            var cat = catDao.GetCategoryByID(item.CategoryID);
            <tr id="row_@item.UserID">
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @user.Name
                </td>
                <td>
                    @cat.CategoryName
                </td>
                <td>
                    @if (item.Status == true)
                    {
                        <p>Đã duyệt</p>
                    }
                    else
                    {
                        <p>Chưa duyệt</p>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Views)
                </td>
                <td>
                    @Html.ActionLink("Sửa", "Update", new { id = item.PostID })
                    |
                    @Ajax.ActionLink("Xóa", "Delete", new { @id = @item.UserID }, new AjaxOptions
                               {
                                   Confirm = "Bạn thật sự muốn xóa bài viết này?",
                                   OnComplete = "$('#row_" + @item.UserID + "').remove()",
                                   HttpMethod = "Delete"
                               })
                </td>
            </tr>
        }

    </table>
</div>
<br />
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, @searchString = @ViewBag.SearchString }))
