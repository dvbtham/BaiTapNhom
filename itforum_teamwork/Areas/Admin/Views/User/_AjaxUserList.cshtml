@using MvcPaging
@model IPagedList<Model.EF.User>

@*<script src="~/Content/Admin/js/jsControllers/userController.js"></script>
<script src="~/Content/Admin/bower_components/datatables/media/js/jquery.dataTables.min.js"></script>
<script src="~/Content/Admin/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js"></script>
<script>
    $(document).ready(function () {
        $('#dataTables-user').DataTable({
            responsive: true
        });
    });
</script>*@
<div class="table-responsive">
    <table class="table table-hover" id="dataTables-user" border="1">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().UserID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().ConfirmedByEmail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Status)
                </th>
                <th></th>
            </tr>
        </thead>

        @foreach (var item in Model)
        {
            <tr id="row_@item.UserID">
                <td>
                    @Html.DisplayFor(modelItem => item.UserID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @(item.ConfirmedByEmail == true ? "Đã xác nhận" : "Chưa xác nhận")
                </td>
                <td>
                    <a href="#" class="btn-active" data-id="@item.UserID">@(item.Status ? "Đã kích hoạt" : "Chưa kích hoạt")</a>
                </td>
                <td>
                    <a href="/Admin/User/Edit/@item.UserID" title="Sửa"><i class="fa fa-edit"></i></a>
                    |
                    <i class="fa fa-remove" title="Xóa"></i>
                    @Ajax.ActionLink("Xóa", "Delete", new { @id = @item.UserID }, new AjaxOptions
                               {
                                   Confirm = "Bạn thật sự muốn xóa người dùng " + item.Name + "?",
                                   OnComplete = "$('#row_" + @item.UserID + "').remove()",
                                   HttpMethod = "Delete"
                               })
                </td>

            </tr>
        }

    </table>
</div>
<div class="well">
    Hiển thị <span class="badge badge-success">@Model.ItemStart</span> tới <span class="badge badge-info">@Model.ItemEnd</span>
    của <span class="badge badge-info">@Model.TotalItemCount</span> kết quả
</div>
<div class="pager">
    @Html.Raw(Ajax.Pager(
            new Options
            {
                PageSize = Model.PageSize,
                TotalItemCount = Model.TotalItemCount,
                CurrentPage = Model.PageNumber,
                ItemTexts = new ItemTexts() { Next = "Trang kế tiếp", Previous = "Trang sau", First = "Trang đầu", Last = "Trang cuối" },
                ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-left", Next = "icon-chevron-right", Last = "icon-forward" },
                TooltipTitles = new TooltipTitles() { Next = "Trang kế tiếp", Previous = "Trang sau", Page = "Trang {0}.", First = "Về trang đầu", Last = "Đi tới trang cuối" },
                Size = Size.normal,
                Alignment = Alignment.centered,
                IsShowControls = true,
                IsShowFirstLast = true,
                CssClass = ""
            },
            new AjaxOptions
            {
                UpdateTargetId = "grid-list",
                OnBegin = "beginPaging",
                OnSuccess = "successPaging",
                OnFailure = "failurePaging"
            }, new { controller = "User", action = "Index", searchString = ViewBag.SearchString }))

</div>
<script src="../../Scripts/bootstrap.min.js" type="text/javascript"></script>


